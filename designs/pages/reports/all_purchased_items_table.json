[
    {
        "id": "sd_4VcSTe3LqzwppFKL",
        "type": "tab",
        "createdDate": "2024-06-20T11:03:16.881Z",
        "label": "all_purchased_items_table",
        "disabled": false,
        "info": "",
        "functionSeq": 3,
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_HFeIU67l0MyY2xoO",
        "type": "OnInit",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "start",
        "name": "",
        "functionName": "sd_HFeIU67l0MyY2xoO",
        "category": "Lifecycle Events",
        "x": 45,
        "y": 240,
        "wires": [
            [
                "sd_7NyJWrMmj6Xj60dl"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_7NyJWrMmj6Xj60dl",
        "type": "PageVariables",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "operation": "set",
        "globalVariables": [
            {
                "textIp": "total",
                "typedIpValue": {
                    "type": "literal",
                    "value": "0"
                }
            },
            {
                "textIp": "datas",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                }
            },
            {
                "textIp": "arrayData",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                }
            },
            {
                "textIp": "tableDataBackup",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                }
            },
            {
                "textIp": "totalA",
                "typedIpValue": {
                    "type": "literal",
                    "value": "0"
                }
            },
            {
                "textIp": "tableData",
                "typedIpValue": {
                    "type": "this.page",
                    "value": "dataSource"
                }
            }
        ],
        "functionName": "sd_7NyJWrMmj6Xj60dl",
        "category": "Function",
        "x": 165,
        "y": 140,
        "wires": [
            [
                "sd_1yjEmPi5wUo4o0Do"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_R1PRW9sFGl6VSlzx",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "\n\npage.dataSource = new MatTableDataSource ([\n \n  { category: \"Groceries\", name: \"Eggs\", price: 2.99, date: \"02 July\"},\n    { category: \"Groceries\", name: \"Milk\", price: 3.49 , date: \"02 May\"},\n    { category: \"Groceries\", name: \"Bread\", price: 2.00 , date:\"02 April\"},\n    { category: \"Groceries\", name: \"Apples\", price: 1.99, date:\"02 June\" },\n    { category: \"Groceries\", name: \"Pasta\", price: 1.50, date: \"02 March\" },\n    { category: \"Maintenance\", name: \"Light bulbs (pack of 4)\", price: 8.99, date: \"02 May\" },\n    { category: \"Maintenance\", name: \"AA Batteries (pack of 12)\", price: 6.49, date: \"02 May\" },\n    { category: \"Maintenance\", name: \"Duct Tape\", price: 4.99, date:\"02 April\" },\n    { category: \"Maintenance\", name: \"Multi-purpose Cleaner\", price: 3.79, date:\"02 April\" },\n    { category: \"Maintenance\", name: \"Paper Towels (pack of 6 rolls)\", price: 9.99, date:\"02 June\"  },\n    { category: \"Supplies\", name: \"Printer Paper (ream of 500 sheets)\", price: 5.99, date:\"02 June\"  },\n    { category: \"Supplies\", name: \"Pens (pack of 10)\", price: 3.49, date:\"02 June\"  },\n    { category: \"Supplies\", name: \"Scotch Tape\", price: 2.99 , date: \"02 March\"},\n    { category: \"Supplies\", name: \"Envelopes (pack of 50)\", price: 7.99, date: \"02 March\" },\n     { category: \"Groceries\", name: \"Eggs\", price: 2.99, date: \"02 March\" },\n     { category: \"TOTAL\", name: \"\", price: 0 },\n\n]);\n\npage.resultReceipts\n// console.log(\"backedn\", page.resultReceipts)\n\npage.tableDataBackup = new MatTableDataSource ([\n \n  { category: \"Groceries\", name: \"Eggs\", price: 2.99, date: \"02 July\"},\n    { category: \"Groceries\", name: \"Milk\", price: 3.49 , date: \"02 May\"},\n    { category: \"Groceries\", name: \"Bread\", price: 2.00 , date:\"02 April\"},\n    { category: \"Groceries\", name: \"Apples\", price: 1.99, date:\"02 June\" },\n    { category: \"Groceries\", name: \"Pasta\", price: 1.50, date: \"02 March\" },\n    { category: \"Maintenance\", name: \"Light bulbs (pack of 4)\", price: 8.99, date: \"02 May\" },\n    { category: \"Maintenance\", name: \"AA Batteries (pack of 12)\", price: 6.49, date: \"02 May\" },\n    { category: \"Maintenance\", name: \"Duct Tape\", price: 4.99, date:\"02 April\" },\n    { category: \"Maintenance\", name: \"Multi-purpose Cleaner\", price: 3.79, date:\"02 April\" },\n    { category: \"Maintenance\", name: \"Paper Towels (pack of 6 rolls)\", price: 9.99, date:\"02 June\"  },\n    { category: \"Supplies\", name: \"Printer Paper (ream of 500 sheets)\", price: 5.99, date:\"02 June\"  },\n    { category: \"Supplies\", name: \"Pens (pack of 10)\", price: 3.49, date:\"02 June\"  },\n    { category: \"Supplies\", name: \"Scotch Tape\", price: 2.99 , date: \"02 March\"},\n    { category: \"Supplies\", name: \"Envelopes (pack of 50)\", price: 7.99, date: \"02 March\" },\n     { category: \"Groceries\", name: \"Eggs\", price: 2.99, date: \"02 March\" },\n     { category: \"TOTAL\", name: \"\", price: page.total },\n\n])\n\n//converting the object to an Array\npage.arrayData = page.dataSource.data\n\n//adding the total to the spreadsheet and table\npage.arrayData .forEach((item,indx) => {\n  if(page.arrayData.length - 1 === indx){\n    return;\n  }\n page.arrayData[page.arrayData.length - 1].price = page.arrayData[page.arrayData.length - 1].price + item.price \n})\n\n\n\nconsole.log(page.arrayData[page.arrayData.length - 1])\n// console.log(\"newArray\", page.arrayData);\n\n//Adding the total to the total outside the table\n\npage.arrayData .forEach(item => {\n  return page.totalA = page.totalA + item.price / 2\n\n})\n\npage.total = page.totalA.toFixed(2)\n\n\n\n   \n  \n    \n  \n\n\n\n\n",
        "functionName": "sd_eJuzOUTYKNgXaqdz_1",
        "category": "Function",
        "x": 245,
        "y": 20,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_B79Ed5PwcUVtN8Md",
        "type": "PageVariables",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "operation": "set",
        "globalVariables": [
            {
                "textIp": "tableData",
                "typedIpValue": {
                    "type": "this.page",
                    "value": "dataSource"
                }
            },
            {
                "textIp": "fileName",
                "typedIpValue": {
                    "type": "this.page",
                    "value": "excelsheet"
                }
            },
            {
                "textIp": "price",
                "typedIpValue": {
                    "type": "literal",
                    "value": "0"
                }
            },
            {
                "textIp": "month",
                "typedIpValue": {
                    "type": "this.page",
                    "value": "month"
                }
            },
            {
                "textIp": "selectForm",
                "typedIpValue": {
                    "type": "literal",
                    "value": "{month: ''}"
                }
            },
            {
                "textIp": "filterTotal",
                "typedIpValue": {
                    "type": "literal",
                    "value": ""
                }
            }
        ],
        "functionName": "sd_E9QbOlnVduPNV5MO_1",
        "category": "Function",
        "x": 365,
        "y": 20,
        "wires": [
            [
                "sd_ivaTji8kiYYwm6z7"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_yYUanaL5c8MbRvcE",
        "type": "AfterViewInit",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "start",
        "name": "",
        "functionName": "ngAfterViewInit",
        "category": "Lifecycle Events",
        "x": 65,
        "y": 440,
        "wires": [
            [
                "sd_GlXZ98dwA2ZRnDmX"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_GlXZ98dwA2ZRnDmX",
        "type": "ViewPicker",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "outputs": 1,
        "childViewVariables": [
            {
                "key": {
                    "type": "literal",
                    "value": "MatSort"
                },
                "defaultValue": "",
                "isViewChildren": false
            },
            {
                "key": {
                    "type": "literal",
                    "value": "MatPaginator"
                },
                "defaultValue": "",
                "isViewChildren": false
            }
        ],
        "functionName": "sd_xKCCTWKzvgDN0rx7_1",
        "category": "Function",
        "x": 185,
        "y": 440,
        "wires": [
            [
                "sd_0locXHJjaZ9Tl6FV"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_e0TccouieBQO4qSB",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "this.page.tableData.sort = this.MatSort;\nthis.page.tableData.paginator = this.MatPaginator;",
        "functionName": "sd_2VNGqvcKee34lvOz_1",
        "category": "Function",
        "x": 385,
        "y": 440,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_hdhS3ro8xt00s7ac",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "const filterValue = (bh.input.filterEvent.target as HTMLInputElement).value;\nthis.page.tableData.filter = filterValue.trim().toLowerCase();\n\npage.total = page.tableData.filteredData.reduce((total:any, item:any) => total + item.price, 0);\n\nbh.totalItem = page.dataSource._data._value.filter((item:any) => {\n    return item.category == \"TOTAL\"\n})\n\npage.tableData.filteredData.push(bh.totalItem[0])\n\n// page.dataSource = page.tableData.filteredData\n\n\nconsole.log(\"filtered with Total ==>\", page.tableData.filteredData)\n",
        "functionName": "sd_iBlFYTlpoczCmWts_2",
        "category": "Function",
        "x": 185,
        "y": 560,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_1LOy9i89nURhTynD",
        "type": "PageStart",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "start",
        "name": "onFilter_2",
        "outputs": 1,
        "inputVariables": [
            {
                "key": "filterEvent",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                },
                "output": false
            }
        ],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "onFilter_2",
        "category": "General",
        "x": 65,
        "y": 560,
        "wires": [
            [
                "sd_hdhS3ro8xt00s7ac"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_PbjQ2z5pylux6pBD",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "\n//convert to an Array \n//try getting the array not the table\npage.arrayData = page.tableData.filteredData\n\n//get the table data\n//  let datas = document.getElementById('table-table')\n \n//converting\n  //trying new one\n let data = document.getElementById('table-table')\n const ws: WorkSheet = utils.json_to_sheet(page.arrayData)\n\n  // const ws:  WorkSheet = utils.table_to_sheet(data);\n  //  const workbook: WorkBook = { Sheets: { 'datas': ws }, SheetNames: ['datas'] };\n\n  const workbook: WorkBook = utils.book_new();\n  utils.book_append_sheet(workbook, ws, 'Sheet1');\n//saving\n  // page.saveAs.writeFile(workbook, page.fileName)\n\n\n\n  const excelBuffer: any = write(workbook, { bookType: 'xlsx', type: 'array' });\n\n   const dataBlob: Blob = new Blob([excelBuffer], { type: 'application/octet-stream' });\n     saveAs(dataBlob, 'table_data.xlsx');",
        "functionName": "sd_2VNGqvcKee34lvOz_3",
        "category": "Function",
        "x": 145,
        "y": 360,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_0locXHJjaZ9Tl6FV",
        "type": "PageVariables",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "operation": "set",
        "globalVariables": [
            {
                "textIp": "tableData.sort",
                "typedIpValue": {
                    "type": "bh",
                    "value": "pageViews.MatSort"
                }
            },
            {
                "textIp": "tableData.paginator",
                "typedIpValue": {
                    "type": "bh",
                    "value": "pageViews.MatPaginator"
                }
            }
        ],
        "functionName": "sd_0locXHJjaZ9Tl6FV",
        "category": "Function",
        "x": 285,
        "y": 440,
        "wires": [
            [
                "sd_e0TccouieBQO4qSB"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_MVizDoI525jCG00k",
        "type": "PageStart",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "start",
        "name": "Convert",
        "outputs": 1,
        "inputVariables": [],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "convert",
        "category": "General",
        "x": 65,
        "y": 360,
        "wires": [
            [
                "sd_PbjQ2z5pylux6pBD"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_ivaTji8kiYYwm6z7",
        "type": "UseDependency",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "property": "",
        "propertyType": "bh",
        "propertyGv": "bh.",
        "alias": "",
        "modules": [
            {
                "textIp": "WorkSheet",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                },
                "injectable": false
            },
            {
                "textIp": "write",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                },
                "injectable": false
            },
            {
                "textIp": "WorkBook",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                },
                "injectable": false
            },
            {
                "textIp": "utils",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                },
                "injectable": false
            }
        ],
        "import_all": false,
        "library": "xlsx",
        "serviceDesignerType": "pages",
        "functionName": "sd_ivaTji8kiYYwm6z7",
        "category": "Function",
        "x": 465,
        "y": 20,
        "wires": [
            [
                "sd_amwwovLCcmHfVQy1"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_amwwovLCcmHfVQy1",
        "type": "UseDependency",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "property": "",
        "propertyType": "bh",
        "propertyGv": "bh.",
        "alias": "",
        "modules": [
            {
                "textIp": "saveAs",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                },
                "injectable": false
            }
        ],
        "import_all": false,
        "library": "file-saver",
        "serviceDesignerType": "pages",
        "functionName": "sd_amwwovLCcmHfVQy1",
        "category": "Function",
        "x": 545,
        "y": 40,
        "wires": [
            [
                "sd_4CbgeVTcji4sjsBa"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_wHr6YuVKPRrX2kMN",
        "type": "PageStart",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "start",
        "name": "totalAmount",
        "outputs": 1,
        "inputVariables": [],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "totalAmount",
        "category": "General",
        "x": 65,
        "y": 760,
        "wires": [
            [
                "sd_SROyLdDiPneI4O4E"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_SROyLdDiPneI4O4E",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "\npage.arrayData = page.dataSource.data\n\n\npage.arrayData .forEach(item => {\n  return page.total = page.total + item.price\n\n})\nconsole.log(\"price\", page.arrayData)",
        "functionName": "sd_SROyLdDiPneI4O4E",
        "category": "Function",
        "x": 225,
        "y": 760,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_LOQZQmlbaciIhz7W",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "switch (new Date().getMonth()) {\n  case 0:\n    page.month = \"January\";\n    break;\n  case 1:\n     page.month = \"February\";\n    break;\n  case 2:\n      page.month = \"March\";\n    break;\n  case 3:\n     page.month = \"April\";\n    break;\n  case 4:\n     page.month = \"May\";\n    break;\n  case 5:\n     page.month = \"June\";\n    break;\n  case 6:\n     page.month = \"July\";\n      break;\n      case 7:\n    page.month = \"August\";\n    break;\n  case 8:\n     page.month = \"September\";\n    break;\n  case 9:\n      page.month = \"October\";\n    break;\n  case 10:\n     page.month = \"November\";\n    break;\n  case 11:\n     page.month = \"December\";\n    break;\n}\n\nconsole.log(\"month\",page.month)",
        "functionName": "sd_LOQZQmlbaciIhz7W",
        "category": "Function",
        "x": 685,
        "y": 240,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_yFWEhKeLq7SiKCiL",
        "type": "PageStart",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "start",
        "name": "",
        "outputs": 1,
        "inputVariables": [],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "sd_yFWEhKeLq7SiKCiL",
        "category": "General",
        "x": 65,
        "y": 680,
        "wires": [
            [
                "sd_sZyFeQRfrOBuDMhn"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_sZyFeQRfrOBuDMhn",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "selected",
        "script": "page.tableDataBackup.filter = page.selectForm.month.trim().toLowerCase()\n// console.log(\"page.tableDataBackup\",page.tableDataBackup)\npage.tableData.filteredData = page.tableDataBackup.filteredData;\n\npage.total = page.tableData.filteredData.reduce((total:any, item:any) => total + item.price, 0);\n\nbh.totalItem = page.dataSource._data._value.filter((item:any) => {\n    return item.category == \"TOTAL\"\n})\n\nbh.totalItem.price = page.tableData.filteredData.reduce((total:any, item:any) => total + item.price, 0);\nconsole.log(\"total ==>\", bh.totalItem[0].price)\nbh.totalItem[0].price = page.total\n\n bh.newTable = page.tableData.filteredData.push(bh.totalItem[0]) \n\n page.tableData = new MatTableDataSource (page.tableData.filteredData)\n\nconsole.log(\"filtered with Total ==>\", page.tableData.filteredData);\nconsole.log(\"new table ==>\", bh.newTable);\n\n",
        "functionName": "selected",
        "category": "Function",
        "x": 185,
        "y": 680,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_1yjEmPi5wUo4o0Do",
        "type": "Environment",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "",
        "outputs": 1,
        "envMaps": [
            {
                "flowVar": {
                    "type": "bh",
                    "value": "ssdURL"
                },
                "envProperty": "ssdURL"
            }
        ],
        "functionName": "sd_1yjEmPi5wUo4o0Do",
        "category": "General",
        "x": 265,
        "y": 240,
        "wires": [
            [
                "sd_6lNqubBSj5hlxHb1"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_6lNqubBSj5hlxHb1",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "bh.url = bh.ssdURL + 'get-receipt-data'",
        "functionName": "sd_6lNqubBSj5hlxHb1",
        "category": "Function",
        "x": 345,
        "y": 240,
        "wires": [
            [
                "sd_wjQBMwrERrqb5smV"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_wjQBMwrERrqb5smV",
        "type": "HttpRequest",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "get-receipts",
        "method": "get",
        "methodMapping": "",
        "methodMappingObj": {},
        "urlMapping": "bh.url",
        "urlMappingObj": {
            "mapVarType": "bh",
            "mapVarValue": "url"
        },
        "ret": "json",
        "retMapping": "",
        "retMappingObj": {},
        "observe": "",
        "observeMapping": "",
        "observeMappingObj": {},
        "reportProgress": false,
        "withCreds": false,
        "reqBody": "",
        "reqBodyObj": {
            "mapVarType": "this.page",
            "mapVarValue": ""
        },
        "resultMapping": "this.page.resultItems",
        "resultMappingObj": {
            "mapVarType": "this.page",
            "mapVarValue": "resultItems"
        },
        "headers": {},
        "headersObj": [],
        "headerMapping": "",
        "headerMappingObj": {},
        "params": {},
        "paramsObj": [],
        "paramMapping": "",
        "paramMappingObj": {},
        "functionName": "getReceipts",
        "category": "HTTP",
        "x": 425,
        "y": 240,
        "wires": [
            [
                "sd_A8gRLs4029yZ1E6F"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_A8gRLs4029yZ1E6F",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "console.log(\"Main data\", page.resultItems)\n\npage.items = page.resultItems[0].items\n\nconsole.log(\"obj\", page.items)\n\n\nfor(let i = 0; i< page.items.length;i++){\n   console.log(page.items[i])\n}\n\n// for(let i=0;i<page._data.length;i++){\n//     for(let j = 0;j<page._data[i].length; j++){\n//       page.items.push(page._data[i][j])\n//     }\n// }\n// console.log(\"Final data ==>\", page.items)\n\n\npage.dataSource = new MatTableDataSource( page.items)\nconsole.log(\"backendData =>>\", page.items)\n\n// //converting the object to an Array\npage.arrayData = page.dataSource.data\n\n// //adding the total to the spreadsheet and table\npage.arrayData .forEach((item,indx) => {\n  if(page.arrayData.length - 1 === indx){\n    return;\n  }\n page.arrayData[page.arrayData.length - 1].price = page.arrayData[page.arrayData.length - 1].price + item.price \n})\n\n\n\n// console.log(page.arrayData[page.arrayData.length - 1])\n// console.log(\"newArray\", page.arrayData);\n\n//Adding the total to the total outside the table\n\npage.arrayData .forEach(item => {\n  return page.totalA = page.totalA + item.price / 2\n\n})\n\npage.total = page.totalA.toFixed(2)",
        "functionName": "sd_A8gRLs4029yZ1E6F",
        "category": "Function",
        "x": 585,
        "y": 240,
        "wires": [
            [
                "sd_B79Ed5PwcUVtN8Md",
                "sd_LOQZQmlbaciIhz7W"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_4CbgeVTcji4sjsBa",
        "type": "PageVariables",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "operation": "set",
        "globalVariables": [
            {
                "textIp": "tableData",
                "typedIpValue": {
                    "type": "this.page",
                    "value": "dataSource"
                }
            }
        ],
        "functionName": "sd_4CbgeVTcji4sjsBa",
        "category": "Function",
        "x": 645,
        "y": 40,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    }
]
