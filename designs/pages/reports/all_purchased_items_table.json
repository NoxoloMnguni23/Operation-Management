[
    {
        "id": "sd_4VcSTe3LqzwppFKL",
        "type": "tab",
        "createdDate": "2024-06-20T11:03:16.881Z",
        "label": "all_purchased_items_table",
        "disabled": false,
        "info": "",
        "functionSeq": 4,
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_HFeIU67l0MyY2xoO",
        "type": "OnInit",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "start",
        "name": "",
        "functionName": "sd_HFeIU67l0MyY2xoO",
        "category": "Lifecycle Events",
        "x": 45,
        "y": 240,
        "wires": [
            [
                "sd_7NyJWrMmj6Xj60dl"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_7NyJWrMmj6Xj60dl",
        "type": "PageVariables",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "operation": "set",
        "globalVariables": [
            {
                "textIp": "total",
                "typedIpValue": {
                    "type": "literal",
                    "value": "0"
                }
            },
            {
                "textIp": "datas",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                }
            },
            {
                "textIp": "arrayData",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                }
            },
            {
                "textIp": "tableDataBackup",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                }
            },
            {
                "textIp": "totalA",
                "typedIpValue": {
                    "type": "literal",
                    "value": "0"
                }
            },
            {
                "textIp": "tableData",
                "typedIpValue": {
                    "type": "this.page",
                    "value": "dataSource"
                }
            },
            {
                "textIp": "dateUploaded",
                "typedIpValue": {
                    "type": "str",
                    "value": ""
                }
            }
        ],
        "functionName": "sd_7NyJWrMmj6Xj60dl",
        "category": "Function",
        "x": 165,
        "y": 240,
        "wires": [
            [
                "sd_1yjEmPi5wUo4o0Do"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_B79Ed5PwcUVtN8Md",
        "type": "PageVariables",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "operation": "set",
        "globalVariables": [
            {
                "textIp": "tableData",
                "typedIpValue": {
                    "type": "this.page",
                    "value": "dataSource"
                }
            },
            {
                "textIp": "fileName",
                "typedIpValue": {
                    "type": "this.page",
                    "value": "excelsheet"
                }
            },
            {
                "textIp": "price",
                "typedIpValue": {
                    "type": "literal",
                    "value": "0"
                }
            },
            {
                "textIp": "month",
                "typedIpValue": {
                    "type": "this.page",
                    "value": "month"
                }
            },
            {
                "textIp": "filterTotal",
                "typedIpValue": {
                    "type": "literal",
                    "value": ""
                }
            },
            {
                "textIp": "selectForm",
                "typedIpValue": {
                    "type": "literal",
                    "value": "{month: \"\"}"
                }
            }
        ],
        "functionName": "sd_E9QbOlnVduPNV5MO_1",
        "category": "Function",
        "x": 305,
        "y": 80,
        "wires": [
            [
                "sd_ivaTji8kiYYwm6z7"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_yYUanaL5c8MbRvcE",
        "type": "AfterViewInit",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "start",
        "name": "",
        "functionName": "ngAfterViewInit",
        "category": "Lifecycle Events",
        "x": 65,
        "y": 440,
        "wires": [
            [
                "sd_GlXZ98dwA2ZRnDmX"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_GlXZ98dwA2ZRnDmX",
        "type": "ViewPicker",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "outputs": 1,
        "childViewVariables": [
            {
                "key": {
                    "type": "literal",
                    "value": "MatSort"
                },
                "defaultValue": "",
                "isViewChildren": false
            },
            {
                "key": {
                    "type": "literal",
                    "value": "MatPaginator"
                },
                "defaultValue": "",
                "isViewChildren": false
            }
        ],
        "functionName": "sd_xKCCTWKzvgDN0rx7_1",
        "category": "Function",
        "x": 185,
        "y": 440,
        "wires": [
            [
                "sd_0locXHJjaZ9Tl6FV"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_e0TccouieBQO4qSB",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "this.page.tableData.sort = this.MatSort;\nthis.page.tableData.paginator = this.MatPaginator;",
        "functionName": "sd_2VNGqvcKee34lvOz_1",
        "category": "Function",
        "x": 385,
        "y": 440,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_PbjQ2z5pylux6pBD",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "\n//convert to an Array \n//try getting the array not the table\npage.arrayData = page.tableData.filteredData\n\n//get the table data\n//  let datas = document.getElementById('table-table')\n \n//converting\n  //trying new one\n let data = document.getElementById('table-table')\n const ws: WorkSheet = utils.json_to_sheet(page.arrayData)\n\n  // const ws:  WorkSheet = utils.table_to_sheet(data);\n  //  const workbook: WorkBook = { Sheets: { 'datas': ws }, SheetNames: ['datas'] };\n\n  const workbook: WorkBook = utils.book_new();\n  utils.book_append_sheet(workbook, ws, 'Sheet1');\n//saving\n  // page.saveAs.writeFile(workbook, page.fileName)\n\n\n\n  const excelBuffer: any = write(workbook, { bookType: 'xlsx', type: 'array' });\n\n   const dataBlob: Blob = new Blob([excelBuffer], { type: 'application/octet-stream' });\n     saveAs(dataBlob, 'table_data.xlsx');",
        "functionName": "sd_2VNGqvcKee34lvOz_3",
        "category": "Function",
        "x": 145,
        "y": 360,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_0locXHJjaZ9Tl6FV",
        "type": "PageVariables",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "operation": "set",
        "globalVariables": [
            {
                "textIp": "tableData.sort",
                "typedIpValue": {
                    "type": "bh",
                    "value": "pageViews.MatSort"
                }
            },
            {
                "textIp": "tableData.paginator",
                "typedIpValue": {
                    "type": "bh",
                    "value": "pageViews.MatPaginator"
                }
            }
        ],
        "functionName": "sd_0locXHJjaZ9Tl6FV",
        "category": "Function",
        "x": 285,
        "y": 440,
        "wires": [
            [
                "sd_e0TccouieBQO4qSB"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_MVizDoI525jCG00k",
        "type": "PageStart",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "start",
        "name": "Convert",
        "outputs": 1,
        "inputVariables": [],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "convert",
        "category": "General",
        "x": 65,
        "y": 360,
        "wires": [
            [
                "sd_PbjQ2z5pylux6pBD"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_ivaTji8kiYYwm6z7",
        "type": "UseDependency",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "property": "",
        "propertyType": "bh",
        "propertyGv": "bh.",
        "alias": "",
        "modules": [
            {
                "textIp": "WorkSheet",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                },
                "injectable": false
            },
            {
                "textIp": "write",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                },
                "injectable": false
            },
            {
                "textIp": "WorkBook",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                },
                "injectable": false
            },
            {
                "textIp": "utils",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                },
                "injectable": false
            }
        ],
        "import_all": false,
        "library": "xlsx",
        "serviceDesignerType": "pages",
        "functionName": "sd_ivaTji8kiYYwm6z7",
        "category": "Function",
        "x": 405,
        "y": 80,
        "wires": [
            [
                "sd_amwwovLCcmHfVQy1"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_amwwovLCcmHfVQy1",
        "type": "UseDependency",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "property": "",
        "propertyType": "bh",
        "propertyGv": "bh.",
        "alias": "",
        "modules": [
            {
                "textIp": "saveAs",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                },
                "injectable": false
            }
        ],
        "import_all": false,
        "library": "file-saver",
        "serviceDesignerType": "pages",
        "functionName": "sd_amwwovLCcmHfVQy1",
        "category": "Function",
        "x": 485,
        "y": 80,
        "wires": [
            [
                "sd_4CbgeVTcji4sjsBa"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_wHr6YuVKPRrX2kMN",
        "type": "PageStart",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "start",
        "name": "totalAmount",
        "outputs": 1,
        "inputVariables": [],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "totalAmount",
        "category": "General",
        "x": 265,
        "y": 340,
        "wires": [
            [
                "sd_SROyLdDiPneI4O4E"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_SROyLdDiPneI4O4E",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "\npage.arrayData = page.dataSource.data\n\n\npage.arrayData.forEach(item => {\n  console.log(\"Prices\", item.price)\n  // return page.total = Number(page.total) + Number(item.price)\n\n})\n// console.log(\"price\", page.arrayData)",
        "functionName": "sd_SROyLdDiPneI4O4E",
        "category": "Function",
        "x": 425,
        "y": 340,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_yFWEhKeLq7SiKCiL",
        "type": "PageStart",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "start",
        "name": "",
        "outputs": 1,
        "inputVariables": [],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "sd_yFWEhKeLq7SiKCiL",
        "category": "General",
        "x": 65,
        "y": 680,
        "wires": [
            [
                "sd_sZyFeQRfrOBuDMhn"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_sZyFeQRfrOBuDMhn",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "selected",
        "script": "page.tableDataBackup.filter = page.selectForm.month.trim().toLowerCase()\n\npage.tableData.filteredData = page.tableDataBackup.filteredData;\n\npage.total = page.tableData.filteredData.reduce((total:any, item:any) => {\n     return total + item.price, 0\n});\n\nconsole.log(\"Totals\", page.total)\n\nbh.totalItem = page.dataSource._data._value.filter((item:any) => {\n    return item.category == \"TOTAL\"\n})\n\nconsole.log(\"total item==>\", bh.totalItem)\n\nbh.totalItem.price = page.tableData.filteredData.reduce((total:any, item:any) => {return total + item.price, 0});\n// console.log(\"Tot data data\", bh.totalItem)\n// bh.totalItem[0].price = page.total\n\n// bh.newTable = page.tableData.filteredData.push(bh.totalItem[0]) \n\n// page.tableData = new MatTableDataSource (page.tableData.filteredData)\n\n// console.log(\"filtered with Total ==>\", page.tableData.filteredData);\n// console.log(\"new table ==>\", bh.newTable);\n\n",
        "functionName": "selected",
        "category": "Function",
        "x": 185,
        "y": 680,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_1yjEmPi5wUo4o0Do",
        "type": "Environment",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "",
        "outputs": 1,
        "envMaps": [
            {
                "flowVar": {
                    "type": "bh",
                    "value": "ssdURL"
                },
                "envProperty": "ssdURL"
            }
        ],
        "functionName": "sd_1yjEmPi5wUo4o0Do",
        "category": "General",
        "x": 265,
        "y": 240,
        "wires": [
            [
                "sd_6lNqubBSj5hlxHb1"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_6lNqubBSj5hlxHb1",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "bh.url = bh.ssdURL + 'get-receipt-data'",
        "functionName": "sd_6lNqubBSj5hlxHb1",
        "category": "Function",
        "x": 345,
        "y": 240,
        "wires": [
            [
                "sd_wjQBMwrERrqb5smV"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_wjQBMwrERrqb5smV",
        "type": "HttpRequest",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "get-receipts",
        "method": "get",
        "methodMapping": "",
        "methodMappingObj": {},
        "urlMapping": "bh.url",
        "urlMappingObj": {
            "mapVarType": "bh",
            "mapVarValue": "url"
        },
        "ret": "json",
        "retMapping": "",
        "retMappingObj": {},
        "observe": "",
        "observeMapping": "",
        "observeMappingObj": {},
        "reportProgress": false,
        "withCreds": false,
        "reqBody": "",
        "reqBodyObj": {
            "mapVarType": "this.page",
            "mapVarValue": ""
        },
        "resultMapping": "this.page.resultItems",
        "resultMappingObj": {
            "mapVarType": "this.page",
            "mapVarValue": "resultItems"
        },
        "headers": {},
        "headersObj": [],
        "headerMapping": "",
        "headerMappingObj": {},
        "params": {},
        "paramsObj": [],
        "paramMapping": "",
        "paramMappingObj": {},
        "functionName": "getReceipts",
        "category": "HTTP",
        "x": 425,
        "y": 240,
        "wires": [
            [
                "sd_IfBYKhthQTu4bbdH"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_4CbgeVTcji4sjsBa",
        "type": "PageVariables",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "operation": "set",
        "globalVariables": [
            {
                "textIp": "tableData",
                "typedIpValue": {
                    "type": "this.page",
                    "value": "dataSource"
                }
            }
        ],
        "functionName": "sd_4CbgeVTcji4sjsBa",
        "category": "Function",
        "x": 585,
        "y": 80,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_Q6PKxHEGu01npHqu",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "// switch (new Date().getMonth()) {\n//   case 0:\n//     page.month = \"January\";\n//     break;\n//   case 1:\n//      page.month = \"February\";\n//     break;\n//   case 2:\n//       page.month = \"March\";\n//     break;\n//   case 3:\n//      page.month = \"April\";\n//     break;\n//   case 4:\n//      page.month = \"May\";\n//     break;\n//   case 5:\n//      page.month = \"June\";\n//     break;\n//   case 6:\n//      page.month = \"July\";\n//       break;\n//       case 7:\n//     page.month = \"August\";\n//     break;\n//   case 8:\n//      page.month = \"September\";\n//     break;\n//   case 9:\n//       page.month = \"October\";\n//     break;\n//   case 10:\n//      page.month = \"November\";\n//     break;\n//   case 11:\n//      page.month = \"December\";\n//     break;\n// }\n\n// console.log(\"month\",page.month)",
        "functionName": "sd_Q6PKxHEGu01npHqu",
        "category": "Function",
        "x": 152.3333282470703,
        "y": 46.80208206176758,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_pFe0J3J5sbAUK40h",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "console.log(bh.input.filterEvent);\nconst filterValue = (bh.input.filterEvent.target as HTMLInputElement).value;\npage.dataSource.filter = filterValue.trim().toLowerCase();\nconsole.log(\"Filter ==>\", page.dataSource)",
        "functionName": "sd_iBlFYTlpoczCmWts_4",
        "category": "Function",
        "x": 205,
        "y": 880,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_yBFg68DzW7wmFcdh",
        "type": "PageStart",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "start",
        "name": "onFilter_4",
        "outputs": 1,
        "inputVariables": [
            {
                "key": "filterEvent",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                },
                "output": false
            }
        ],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "onFilter_4",
        "category": "General",
        "x": 60,
        "y": 880,
        "wires": [
            [
                "sd_pFe0J3J5sbAUK40h"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_uErfSK70yE4LVoI4",
        "type": "PageStart",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "pages",
        "nodeType": "start",
        "name": "correctDate",
        "outputs": 1,
        "inputVariables": [
            {
                "key": "date",
                "defaultValue": {
                    "type": "str",
                    "value": ""
                },
                "output": false
            },
            {
                "key": "correctDate",
                "defaultValue": {
                    "type": "str",
                    "value": ""
                },
                "output": true
            }
        ],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "correctDate",
        "category": "General",
        "x": 260,
        "y": 600,
        "wires": [
            [
                "sd_Wz0oU0zwClzNifPc"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "all_purchased_items_tableComponent"
    },
    {
        "id": "sd_Wz0oU0zwClzNifPc",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "// console.log('page.items: ', page.items)\n\nlet parts = page.items['Date-Uploaded'].split('/');\nlet year = parts[0];\nlet month = parseInt(parts[1]);\nlet day = parts[2];\nlet monthNames = [\n  \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nmonth++;\nbh.input.correctDate = `${day} ${monthNames[month - 2]} ${year}`;",
        "functionName": "sd_Wz0oU0zwClzNifPc",
        "category": "Function",
        "x": 380,
        "y": 600,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    },
    {
        "id": "sd_IfBYKhthQTu4bbdH",
        "type": "Script",
        "z": "sd_4VcSTe3LqzwppFKL",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "page.items = {};\nbh.items = []\n//  console.log('ALL FROM MONGO; ', page.resultItems.items)\nbh.date = page.resultItems.filter((item:any, indx: number) => {\n  // console.log(`data source index:${indx} `, page.items.dataSource)\n  // bh.items.push(page.items.dataSource)\n  // page.items.push(item.dateUploaded)\n  let _item = {}\n  page.items['Date-Uploaded']=page.resultItems[0]['Date-Uploaded']\n    //  console.log(\"Date plus one\",page.items['Date-Uploaded'])\n  page.dateUploaded =this.correctDate(page.items['Date-Uploaded'])\n  //console.log(\"newdate\",  page.dateUploaded)\n  page.items['dataSource'] = item.items;\n  // page.items.push(_item)\n  return page.items.dataSource\n\n})\n\n// console.log('all data with date: ', bh.date)\n// console.log('all items: ', bh.items)\n\nlet newIs = []\n\npage.resultItems.forEach((item) => {\n  if(item.items?.constructor != Array) {\n    return newIs.push(item)\n  }\n  item.items?.forEach((value) => {\n    newIs.push(value)\n  })\n})\n\n// console.log('New Ins:', newIs)\n\nlet newData = []\nconst transformedData = newIs.map((obj, indx) => {\n  // console.log('Obj: ', obj)\n  const newObj = {date: ''};\n  newObj.date = bh.date[0]['Date-Uploaded']\n  Object.keys(obj).forEach((key, i) => {\n    const newKey = key.replace(/[0-9]/g, ''); // Remove any digits from the key\n    newObj[newKey] = obj[key];\n      // console.log(newObj)\n      if(i === 2) {\n      newData.push(newObj)\n        \n      }\n  });\n  // return newObj;\n});\n\nnewIs = newData\n\nlet newItems = []\nbh.items = bh.items.filter((item) => {\n  let _item;\n  if(item?.constructor != Array) {\n    return newItems.push(item)\n  }\n  item.forEach((value) => {\n    newItems.push(value)\n  })\n})\n\n// console.log('New Items: ', bh.items)\n\n\n//Pushing in the date\nbh.date = page.resultItems.forEach((item:any) => {\n  item.items.forEach((x:any) => {\nx.date = page.dateUploaded;\n  })\n  // console.log(\"item\", item)\n  //page.items.push(item.dateUploaded)\n  page.items['dataSource'] = item.items;\n  // console.log(\"Date plus one\",page.items['Date-Uploaded'])\n})\n\n\n//getting all items from different slips\n// console.log('Page items: ', page.items) \nfor(let i = 0; i< page.items.length;i++){\n  page.totalItems.push(page.items[i].dataSource)\n  \n}\n// console.log(\"get\", page.totalItems)\n\n// for(let i=0;i<page._data.length;i++){\n//     for(let j = 0;j<page._data[i].length; j++){\n//       page.items.push(page._data[i][j])\n//     }\n//}\n// console.log(\"Final data ==>\", page.items)\n\n\n// console.log(\"Table ==>\",page.total)\n\n\n\n//assigning the backend data the table\n page.dataSource = new MatTableDataSource( newIs) \n\n// page.dataSource = new MatTableDataSource( page.items.dataSource.forEach((item:any) => {\n// item.date = page.dateUploaded\n// return item\n\n// }))\n// console.log(\"sate\",page.items.dataSource )\n// console.log(\"backendData =>>\", page.items)\n\n//page.tableDataBackup = new  MatTableDataSource( page.items.dataSource)\n\n// //converting the object to an Array\npage.arrayData = page.dataSource.data\n\n// //adding the total to the spreadsheet and table\n// page.arrayData.forEach((item,indx) => {\n//   if(page.arrayData.length - 1 === indx){\n//     return;\n//   }\n//  page.arrayData[page.arrayData.length - 1].price = page.arrayData[page.arrayData.length - 1].price + item.price \n// })\n\n\npage.arrayData = page.dataSource.data\n\nlet arr = []\npage.arrayData.forEach(item => {\n  arr.push(item.price)\n  // return page.total = Number(page.total) + Number(item.price)\n})\n  // console.log(\"Pricesssss\", arr)\n\n// console.log(page.arrayData[page.arrayData.length - 1])\n// console.log(\"newArray\", page.arrayData);\n\n//Adding the total to the total outside the table\n\npage.arrayData.forEach(item => {\n  return page.totalA = page.totalA + item.price \n\n})\n\npage.total = page.totalA.toFixed(2)\nbh.total = {\n  category: \"Total\",\n  price: page.total\n}\n\nnewIs.push(bh.total)",
        "functionName": "sd_IfBYKhthQTu4bbdH",
        "category": "Function",
        "x": 385,
        "y": 160,
        "wires": [
            [
                "sd_B79Ed5PwcUVtN8Md"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "all_purchased_items_tableComponent",
        "generated": true
    }
]
